"use strict";exports.id=9376,exports.ids=[9376],exports.modules={49457:(e,t,r)=>{r.d(t,{X:()=>n});var s=r(2381),a=r(17856);let i={"gpt-4o":{input:.005,output:.015},"gpt-4o-mini":{input:15e-5,output:6e-4},"gpt-3.5-turbo":{input:.0015,output:.002},"claude-3-5-sonnet":{input:.003,output:.015},"claude-3-opus":{input:.015,output:.075},"claude-3-haiku":{input:25e-5,output:.00125},"gemini-pro":{input:125e-6,output:375e-6},"gemini-flash":{input:75e-6,output:3e-4}};class o{constructor(e){this.costs=[],this.limits={daily:parseFloat(process.env.MAX_DAILY_SPEND||"100"),weekly:parseFloat(process.env.MAX_WEEKLY_SPEND||"500"),monthly:parseFloat(process.env.MAX_MONTHLY_SPEND||"1000"),perUser:parseFloat(process.env.MAX_PER_USER_SPEND||"50"),perDealer:parseFloat(process.env.MAX_PER_DEALER_SPEND||"200"),...e}}calculateCost(e,t,r,a){let o=i[t];return o?r/1e3*o.input+a/1e3*o.output:(s.kg.warn("Unknown model pricing",{provider:e,model:t}),0)}async recordCost(e){let t=e.cost||this.calculateCost(e.provider,e.model,e.inputTokens,e.outputTokens),r={...e,cost:t,timestamp:new Date};this.costs.push(r);let i=a.F.key("costs",new Date().toISOString().split("T")[0]),o=await a.F.get(i)||[];o.push(r),await a.F.set(i,o,86400),s.kg.info("Cost recorded",{provider:e.provider,model:e.model,cost:t,inputTokens:e.inputTokens,outputTokens:e.outputTokens}),await this.checkLimits(r)}async checkLimits(e){let t=new Date().toISOString().split("T")[0],r=await this.getCostSummary("daily",t);if(r.totalCost>this.limits.daily&&s.kg.warn("Daily cost limit exceeded",{current:r.totalCost,limit:this.limits.daily}),e.userId&&this.limits.perUser){let r=await this.getUserCosts(e.userId,"daily",t);r>this.limits.perUser&&s.kg.warn("User daily cost limit exceeded",{userId:e.userId,current:r,limit:this.limits.perUser})}if(e.dealerId&&this.limits.perDealer){let r=await this.getDealerCosts(e.dealerId,"daily",t);r>this.limits.perDealer&&s.kg.warn("Dealer daily cost limit exceeded",{dealerId:e.dealerId,current:r,limit:this.limits.perDealer})}}async getCostSummary(e,t){let r=a.F.key("cost-summary",e,t||new Date().toISOString().split("T")[0]),s=await a.F.get(r);if(s)return s;let i=await this.getCostsForPeriod(e,t),o={totalCost:i.reduce((e,t)=>e+t.cost,0),totalTokens:i.reduce((e,t)=>e+t.inputTokens+t.outputTokens,0),operationCounts:{},providerBreakdown:{},period:`${e}-${t||new Date().toISOString().split("T")[0]}`};for(let e of i)o.operationCounts[e.operation]=(o.operationCounts[e.operation]||0)+1;for(let e of i)o.providerBreakdown[e.provider]||(o.providerBreakdown[e.provider]={cost:0,tokens:0}),o.providerBreakdown[e.provider].cost+=e.cost,o.providerBreakdown[e.provider].tokens+=e.inputTokens+e.outputTokens;return await a.F.set(r,o,3600),o}async getUserCosts(e,t,r){return(await this.getCostsForPeriod(t,r)).filter(t=>t.userId===e).reduce((e,t)=>e+t.cost,0)}async getDealerCosts(e,t,r){return(await this.getCostsForPeriod(t,r)).filter(t=>t.dealerId===e).reduce((e,t)=>e+t.cost,0)}async getCostsForPeriod(e,t){let r=t?new Date(t):new Date,s=[];if("daily"===e){let e=a.F.key("costs",r.toISOString().split("T")[0]),t=await a.F.get(e)||[];s.push(...t)}else if("weekly"===e)for(let e=0;e<7;e++){let t=new Date(r);t.setDate(t.getDate()-e);let i=a.F.key("costs",t.toISOString().split("T")[0]),o=await a.F.get(i)||[];s.push(...o)}else if("monthly"===e)for(let e=0;e<30;e++){let t=new Date(r);t.setDate(t.getDate()-e);let i=a.F.key("costs",t.toISOString().split("T")[0]),o=await a.F.get(i)||[];s.push(...o)}return s}async canProceed(e,t,r,s,a,i){let o=this.calculateCost(e,t,r,s),n=new Date().toISOString().split("T")[0],l=await this.getCostSummary("daily",n);if(l.totalCost+o>this.limits.daily)return{allowed:!1,reason:"Daily cost limit would be exceeded",currentCost:l.totalCost,limit:this.limits.daily};if(a&&this.limits.perUser){let e=await this.getUserCosts(a,"daily",n);if(e+o>this.limits.perUser)return{allowed:!1,reason:"User daily cost limit would be exceeded",currentCost:e,limit:this.limits.perUser}}if(i&&this.limits.perDealer){let e=await this.getDealerCosts(i,"daily",n);if(e+o>this.limits.perDealer)return{allowed:!1,reason:"Dealer daily cost limit would be exceeded",currentCost:e,limit:this.limits.perDealer}}return{allowed:!0}}async getTopSpenders(e,t=10){let r=await this.getCostsForPeriod(e),s=new Map;for(let e of r){if(e.userId){let t=`user:${e.userId}`,r=s.get(t)||{cost:0,operations:0,type:"user"};s.set(t,{cost:r.cost+e.cost,operations:r.operations+1,type:"user"})}if(e.dealerId){let t=`dealer:${e.dealerId}`,r=s.get(t)||{cost:0,operations:0,type:"dealer"};s.set(t,{cost:r.cost+e.cost,operations:r.operations+1,type:"dealer"})}}return Array.from(s.entries()).map(([e,t])=>({id:e.split(":")[1],...t})).sort((e,t)=>t.cost-e.cost).slice(0,t)}}let n=new o},39367:(e,t,r)=>{r.d(t,{s:()=>o});var s=r(2381),a=r(17856);class i{async loadPack(e){this.validatePromptPack(e),this.packs.set(e.id,e),e.prompts.forEach(e=>{this.templates.set(e.id,e)}),await a.F.set(a.F.key("prompt-pack",e.id),e,86400),s.kg.info("Prompt pack loaded",{packId:e.id,name:e.name,promptCount:e.prompts.length})}async loadPackFromFile(e){try{let t=await Promise.resolve().then(r.t.bind(r,73292,23)),s=JSON.parse(await t.readFile(e,"utf-8"));return await this.loadPack(s),s}catch(t){throw s.kg.error("Failed to load prompt pack from file",t instanceof Error?t:Error(String(t)),{filePath:e}),t}}getPack(e){return this.packs.get(e)||null}getTemplate(e){return this.templates.get(e)||null}listPacks(){return Array.from(this.packs.values())}listTemplates(e){if(e){let t=this.getPack(e);return t?t.prompts:[]}return Array.from(this.templates.values())}searchTemplates(e,t){let r=Array.from(this.templates.values()),s=e.toLowerCase();return r.filter(e=>{let r=e.name.toLowerCase().includes(s)||e.description.toLowerCase().includes(s)||e.metadata.tags.some(e=>e.toLowerCase().includes(s)),a=!t||e.category===t;return r&&a})}async expandPrompt(e,t){let r=this.getTemplate(e);if(!r)throw Error(`Template not found: ${e}`);this.validateVariables(r,t);let a=this.processTemplate(r.template,t),i={prompt:r.template,variables:t,expandedPrompt:a,metadata:{templateId:e,expandedAt:new Date,tokenCount:this.estimateTokenCount(a)}};return s.kg.debug("Prompt expanded",{templateId:e,variableCount:Object.keys(t).length,tokenCount:i.metadata.tokenCount}),i}async expandBatch(e){if(!this.getTemplate(e.templateId))throw Error(`Template not found: ${e.templateId}`);let t=[];for(let r of e.variations)try{let s=await this.expandPrompt(e.templateId,r);t.push(s)}catch(t){s.kg.error("Failed to expand prompt variation",t instanceof Error?t:Error(String(t)),{templateId:e.templateId,variables:r})}return s.kg.info("Batch prompt expansion completed",{templateId:e.templateId,requested:e.variations.length,successful:t.length}),t}validatePromptPack(e){if(!e.id||!e.name||!e.prompts)throw Error("Invalid prompt pack structure");e.prompts.forEach(t=>{if(!t.id||!t.name||!t.template)throw Error(`Invalid prompt template: ${t.id||"unknown"}`);let r=e.prompts.map(e=>e.id),s=r.filter((e,t)=>r.indexOf(e)!==t);if(s.length>0)throw Error(`Duplicate template IDs found: ${s.join(", ")}`)})}validateVariables(e,t){let r=e.variables.filter(e=>e.required&&!(e.name in t)).map(e=>e.name);if(r.length>0)throw Error(`Missing required variables: ${r.join(", ")}`);for(let r of e.variables){let e=t[r.name];void 0!==e&&this.validateVariable(r,e)}}validateVariable(e,t){switch(e.type){case"string":if("string"!=typeof t)throw Error(`Variable ${e.name} must be a string`);break;case"number":if("number"!=typeof t||isNaN(t))throw Error(`Variable ${e.name} must be a number`);break;case"boolean":if("boolean"!=typeof t)throw Error(`Variable ${e.name} must be a boolean`);break;case"array":if(!Array.isArray(t))throw Error(`Variable ${e.name} must be an array`);break;case"object":if("object"!=typeof t||null===t||Array.isArray(t))throw Error(`Variable ${e.name} must be an object`)}if(e.validation){let{pattern:r,min:s,max:a,options:i}=e.validation;if(r&&"string"==typeof t&&!new RegExp(r).test(t))throw Error(`Variable ${e.name} does not match required pattern`);if(void 0!==s&&"number"==typeof t&&t<s)throw Error(`Variable ${e.name} must be >= ${s}`);if(void 0!==a&&"number"==typeof t&&t>a)throw Error(`Variable ${e.name} must be <= ${a}`);if(i&&!i.includes(t))throw Error(`Variable ${e.name} must be one of: ${i.join(", ")}`)}}processTemplate(e,t){let r=e;return(r=(r=r.replace(/\{\{(\w+)\}\}/g,(e,r)=>{if(r in t){let e=t[r];return Array.isArray(e)?e.join(", "):String(e)}return e})).replace(/\{\{#if (\w+)\}\}(.*?)\{\{\/if\}\}/gs,(e,r,s)=>t[r]?s:"")).replace(/\{\{#each (\w+)\}\}(.*?)\{\{\/each\}\}/gs,(e,r,s)=>{let a=t[r];return Array.isArray(a)?a.map(e=>s.replace(/\{\{this\}\}/g,String(e))).join("\n"):""})}estimateTokenCount(e){return Math.ceil(e.length/4)}async getTemplateStats(e){let t=a.F.key("template-stats",e),r=await a.F.get(t);return{usageCount:r?.count||0,lastUsed:r?.lastUsed?new Date(r.lastUsed):null,averageTokens:r?.count?Math.round((r.totalTokens||0)/r.count):0}}async recordTemplateUsage(e,t){let r=a.F.key("template-stats",e),s=await a.F.get(r),i={count:(s?.count||0)+1,lastUsed:new Date().toISOString(),totalTokens:(s?.totalTokens||0)+t};await a.F.set(r,i,2592e3)}constructor(){this.packs=new Map,this.templates=new Map}}let o=new i},90453:(e,t,r)=>{r.d(t,{Sy:()=>l});var s=r(2381);let a={admin:["read:dashboard","write:dashboard","read:batches","write:batches","read:queue","write:queue","read:admin","write:admin","read:costs","write:costs"],dealer:["read:dashboard","write:dashboard","read:batches","write:batches","read:queue","read:costs"],user:["read:dashboard","read:batches","read:queue"],viewer:["read:dashboard"]};class i{async createSession(e){let t=this.generateSessionId(),r=new Date;r.setHours(r.getHours()+24);let a={userId:e.id,user:e,expiresAt:r,createdAt:new Date};return this.sessions.set(t,a),s.kg.info("Session created",{userId:e.id,sessionId:t.substring(0,8)+"...",expiresAt:r}),t}async getSession(e){let t=this.sessions.get(e);return t?new Date>t.expiresAt?(this.sessions.delete(e),s.kg.info("Session expired",{userId:t.userId}),null):t:null}async deleteSession(e){let t=this.sessions.get(e);t&&(this.sessions.delete(e),s.kg.info("Session deleted",{userId:t.userId}))}async refreshSession(e){let t=this.sessions.get(e);t&&(t.expiresAt=new Date,t.expiresAt.setHours(t.expiresAt.getHours()+24))}generateSessionId(){return crypto.randomUUID()}async cleanupExpiredSessions(){let e=new Date,t=0;for(let[r,s]of this.sessions.entries())e>s.expiresAt&&(this.sessions.delete(r),t++);t>0&&s.kg.info("Cleaned up expired sessions",{count:t})}constructor(){this.sessions=new Map}}class o{constructor(){this.sessionManager=new i,setInterval(()=>{this.sessionManager.cleanupExpiredSessions()},36e5)}hasPermission(e,t){return e.permissions.includes(t)||a[e.role]?.includes(t)}hasAnyPermission(e,t){return t.some(t=>this.hasPermission(e,t))}hasAllPermissions(e,t){return t.every(t=>this.hasPermission(e,t))}canAccessDealer(e,t){return"admin"===e.role||e.dealerId===t}async authenticateRequest(e){try{let t=e.headers.get("authorization"),r=null;if(t&&t.startsWith("Bearer ")&&(r=t.substring(7)),r||(r=e.cookies.get("session")?.value||null),!r)return null;let s=await this.sessionManager.getSession(r);if(!s)return null;return await this.sessionManager.refreshSession(r),s.user}catch(e){return s.kg.error("Authentication error",e instanceof Error?e:Error(String(e))),null}}async createUserSession(e){return await this.sessionManager.createSession(e)}async logout(e){await this.sessionManager.deleteSession(e)}requireAuth(){return async e=>{let t=await this.authenticateRequest(e);if(!t)throw Error("Authentication required");return t}}requirePermission(e){return async t=>{let r=await this.authenticateRequest(t);if(!r)throw Error("Authentication required");if(!this.hasPermission(r,e))throw Error(`Permission required: ${e}`);return r}}requireDealer(e){return async t=>{let r=await this.authenticateRequest(t);if(!r)throw Error("Authentication required");if(!this.canAccessDealer(r,e))throw Error("Access to dealer not allowed");return r}}}class n{constructor(){this.users=new Map,this.users.set("admin@dealershipai.com",{id:"admin-1",email:"admin@dealershipai.com",role:"admin",permissions:[],metadata:{name:"Admin User",createdAt:new Date}}),this.users.set("dealer@toyota-naples.com",{id:"dealer-1",email:"dealer@toyota-naples.com",role:"dealer",dealerId:"toyota-naples",permissions:[],metadata:{name:"Toyota Naples",createdAt:new Date}}),this.users.set("user@example.com",{id:"user-1",email:"user@example.com",role:"user",dealerId:"toyota-naples",permissions:[],metadata:{name:"Demo User",createdAt:new Date}})}async findByEmail(e){return this.users.get(e)||null}async findById(e){for(let t of this.users.values())if(t.id===e)return t;return null}async createUser(e){let t={...e,id:`user-${Date.now()}`,permissions:a[e.role]||[],metadata:{createdAt:new Date}};return this.users.set(t.email,t),t}async updateUser(e,t){let r=await this.findById(e);if(!r)return null;let s={...r,...t};return this.users.set(r.email,s),s}}let l=new o;new n}};