// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/ai-chat" | "/analytics" | "/auth/error" | "/auth/signin" | "/auth/signup" | "/dashboard" | "/dealers" | "/enterprise" | "/monitoring" | "/settings"
type AppRouteHandlerRoutes = "/api/advanced-kpis" | "/api/ai-assistant/chat" | "/api/ai/chat" | "/api/ai/chat/stream" | "/api/analytics/predictions" | "/api/auth/[...nextauth]" | "/api/auth/register" | "/api/auth/signup" | "/api/batch/expand" | "/api/batch/preview" | "/api/batch/run" | "/api/dashboard" | "/api/dashboard/enhanced" | "/api/enterprise/competitive-intelligence" | "/api/enterprise/multi-location" | "/api/enterprise/revenue-attribution" | "/api/health" | "/api/integrations" | "/api/monitoring/metrics" | "/api/monitoring/sentry-tunnel" | "/api/pilot/business-impact" | "/api/pilot/data-connectors" | "/api/pilot/feedback" | "/api/pilot/industry-template" | "/api/pilot/toyota-naples" | "/api/prompts" | "/api/queue/control" | "/api/queue/job/[id]" | "/api/queue/jobs" | "/api/queue/metrics" | "/api/rate-limit/check" | "/api/v1/monitoring/alerts" | "/api/v1/monitoring/health" | "/api/v1/monitoring/metrics" | "/api/v1/probe/retry-dlq" | "/api/v1/probe/status" | "/api/visibility" | "/api/voice-image/lot-intelligence" | "/api/voice-image/radio-analysis" | "/api/voice-image/voice-insights"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/ai-chat": {}
  "/analytics": {}
  "/api/advanced-kpis": {}
  "/api/ai-assistant/chat": {}
  "/api/ai/chat": {}
  "/api/ai/chat/stream": {}
  "/api/analytics/predictions": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/register": {}
  "/api/auth/signup": {}
  "/api/batch/expand": {}
  "/api/batch/preview": {}
  "/api/batch/run": {}
  "/api/dashboard": {}
  "/api/dashboard/enhanced": {}
  "/api/enterprise/competitive-intelligence": {}
  "/api/enterprise/multi-location": {}
  "/api/enterprise/revenue-attribution": {}
  "/api/health": {}
  "/api/integrations": {}
  "/api/monitoring/metrics": {}
  "/api/monitoring/sentry-tunnel": {}
  "/api/pilot/business-impact": {}
  "/api/pilot/data-connectors": {}
  "/api/pilot/feedback": {}
  "/api/pilot/industry-template": {}
  "/api/pilot/toyota-naples": {}
  "/api/prompts": {}
  "/api/queue/control": {}
  "/api/queue/job/[id]": { "id": string; }
  "/api/queue/jobs": {}
  "/api/queue/metrics": {}
  "/api/rate-limit/check": {}
  "/api/v1/monitoring/alerts": {}
  "/api/v1/monitoring/health": {}
  "/api/v1/monitoring/metrics": {}
  "/api/v1/probe/retry-dlq": {}
  "/api/v1/probe/status": {}
  "/api/visibility": {}
  "/api/voice-image/lot-intelligence": {}
  "/api/voice-image/radio-analysis": {}
  "/api/voice-image/voice-insights": {}
  "/auth/error": {}
  "/auth/signin": {}
  "/auth/signup": {}
  "/dashboard": {}
  "/dealers": {}
  "/enterprise": {}
  "/monitoring": {}
  "/settings": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
