// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/ai-chat/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ai-chat">> = Specific
  const handler = {} as typeof import("../../app/ai-chat/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../app/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/error/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/error">> = Specific
  const handler = {} as typeof import("../../app/auth/error/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/signin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signin">> = Specific
  const handler = {} as typeof import("../../app/auth/signin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signup">> = Specific
  const handler = {} as typeof import("../../app/auth/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dealers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dealers">> = Specific
  const handler = {} as typeof import("../../app/dealers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/enterprise/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/enterprise">> = Specific
  const handler = {} as typeof import("../../app/enterprise/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/monitoring/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/monitoring">> = Specific
  const handler = {} as typeof import("../../app/monitoring/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/advanced-kpis/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/advanced-kpis">> = Specific
  const handler = {} as typeof import("../../app/api/advanced-kpis/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai-assistant/chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai-assistant/chat">> = Specific
  const handler = {} as typeof import("../../app/api/ai-assistant/chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai/chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai/chat">> = Specific
  const handler = {} as typeof import("../../app/api/ai/chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai/chat/stream/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai/chat/stream">> = Specific
  const handler = {} as typeof import("../../app/api/ai/chat/stream/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analytics/predictions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics/predictions">> = Specific
  const handler = {} as typeof import("../../app/api/analytics/predictions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/signup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/signup">> = Specific
  const handler = {} as typeof import("../../app/api/auth/signup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/batch/expand/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/batch/expand">> = Specific
  const handler = {} as typeof import("../../app/api/batch/expand/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/batch/preview/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/batch/preview">> = Specific
  const handler = {} as typeof import("../../app/api/batch/preview/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/batch/run/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/batch/run">> = Specific
  const handler = {} as typeof import("../../app/api/batch/run/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/dashboard/enhanced/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/dashboard/enhanced">> = Specific
  const handler = {} as typeof import("../../app/api/dashboard/enhanced/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/dashboard/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/dashboard">> = Specific
  const handler = {} as typeof import("../../app/api/dashboard/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/enterprise/competitive-intelligence/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/enterprise/competitive-intelligence">> = Specific
  const handler = {} as typeof import("../../app/api/enterprise/competitive-intelligence/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/enterprise/multi-location/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/enterprise/multi-location">> = Specific
  const handler = {} as typeof import("../../app/api/enterprise/multi-location/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/enterprise/revenue-attribution/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/enterprise/revenue-attribution">> = Specific
  const handler = {} as typeof import("../../app/api/enterprise/revenue-attribution/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/integrations/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/integrations">> = Specific
  const handler = {} as typeof import("../../app/api/integrations/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/monitoring/metrics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/monitoring/metrics">> = Specific
  const handler = {} as typeof import("../../app/api/monitoring/metrics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/monitoring/sentry-tunnel/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/monitoring/sentry-tunnel">> = Specific
  const handler = {} as typeof import("../../app/api/monitoring/sentry-tunnel/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/pilot/business-impact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/pilot/business-impact">> = Specific
  const handler = {} as typeof import("../../app/api/pilot/business-impact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/pilot/data-connectors/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/pilot/data-connectors">> = Specific
  const handler = {} as typeof import("../../app/api/pilot/data-connectors/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/pilot/feedback/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/pilot/feedback">> = Specific
  const handler = {} as typeof import("../../app/api/pilot/feedback/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/pilot/industry-template/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/pilot/industry-template">> = Specific
  const handler = {} as typeof import("../../app/api/pilot/industry-template/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/pilot/toyota-naples/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/pilot/toyota-naples">> = Specific
  const handler = {} as typeof import("../../app/api/pilot/toyota-naples/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/prompts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/prompts">> = Specific
  const handler = {} as typeof import("../../app/api/prompts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/queue/control/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/queue/control">> = Specific
  const handler = {} as typeof import("../../app/api/queue/control/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/queue/job/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/queue/job/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/queue/job/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/queue/jobs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/queue/jobs">> = Specific
  const handler = {} as typeof import("../../app/api/queue/jobs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/queue/metrics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/queue/metrics">> = Specific
  const handler = {} as typeof import("../../app/api/queue/metrics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/rate-limit/check/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/rate-limit/check">> = Specific
  const handler = {} as typeof import("../../app/api/rate-limit/check/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v1/monitoring/alerts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/monitoring/alerts">> = Specific
  const handler = {} as typeof import("../../app/api/v1/monitoring/alerts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v1/monitoring/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/monitoring/health">> = Specific
  const handler = {} as typeof import("../../app/api/v1/monitoring/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v1/monitoring/metrics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/monitoring/metrics">> = Specific
  const handler = {} as typeof import("../../app/api/v1/monitoring/metrics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v1/probe/retry-dlq/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/probe/retry-dlq">> = Specific
  const handler = {} as typeof import("../../app/api/v1/probe/retry-dlq/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v1/probe/status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/probe/status">> = Specific
  const handler = {} as typeof import("../../app/api/v1/probe/status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/visibility/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/visibility">> = Specific
  const handler = {} as typeof import("../../app/api/visibility/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice-image/lot-intelligence/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice-image/lot-intelligence">> = Specific
  const handler = {} as typeof import("../../app/api/voice-image/lot-intelligence/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice-image/radio-analysis/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice-image/radio-analysis">> = Specific
  const handler = {} as typeof import("../../app/api/voice-image/radio-analysis/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice-image/voice-insights/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice-image/voice-insights">> = Specific
  const handler = {} as typeof import("../../app/api/voice-image/voice-insights/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
