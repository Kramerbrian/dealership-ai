"use strict";(()=>{var e={};e.id=8939,e.ids=[8939],e.modules={53524:e=>{e.exports=require("@prisma/client")},67096:e=>{e.exports=require("bcrypt")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},94553:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>x,originalPathname:()=>q,patchFetch:()=>v,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>y});var s={};r.r(s),r.d(s,{GET:()=>u,POST:()=>p});var n=r(95815),a=r(51150),o=r(10007),i=r(30596),c=r(59001),l=r(89267);let p=(0,c.QO)(async(e,t)=>{try{let{message:r,dealerId:s,context:n={},provider:a="openai"}=await e.json();if(s&&!(0,c.rP)(t,s))return i.Z.json({error:"Access denied - Cannot access this dealer's AI assistant"},{status:403});if(!r)return i.Z.json({error:"Message is required"},{status:400});let o={...n,dealerId:s,userRole:t.user.role,streaming:!0},p=new Headers({"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST","Access-Control-Allow-Headers":"Content-Type"}),u=new ReadableStream({async start(e){let t=new TextEncoder,n=(r,s)=>{let n=`event: ${r}
data: ${JSON.stringify(s)}

`;e.enqueue(t.encode(n))};try{n("connected",{dealerId:s,provider:a,timestamp:new Date().toISOString()});let t=await (0,l.Cf)(r,o,a,e=>{n("chunk",{content:e,timestamp:new Date().toISOString()})});n("complete",{metadata:{provider:t.provider,model:t.model,tokensUsed:t.tokensUsed,cost:t.cost,latency:t.latency},suggestions:["Tell me more about this recommendation","What are the implementation steps?","How long will this take to see results?","What's the expected ROI?"],timestamp:t.timestamp}),n("close",{message:"Stream completed successfully"}),e.close()}catch(t){console.error("Streaming AI error:",t),n("error",{error:"Failed to generate AI response",fallback:"I'm experiencing some connectivity issues. Please try again in a moment.",timestamp:new Date().toISOString()}),e.close()}},cancel(){console.log("Streaming cancelled by client")}});return new i.Z(u,{headers:p})}catch(e){return console.error("AI Streaming API error:",e),i.Z.json({error:"Failed to initialize streaming chat"},{status:500})}});async function u(e){return i.Z.json({status:"AI Streaming Chat API is running",description:"Real-time streaming responses for enhanced user experience",usage:{method:"POST",endpoint:"/api/ai/chat/stream",contentType:"text/event-stream",events:["connected","chunk","complete","error","close"]},features:["real-time-streaming","server-sent-events","progressive-responses","client-disconnect-handling"]})}let m=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/ai/chat/stream/route",pathname:"/api/ai/chat/stream",filename:"route",bundlePath:"app/api/ai/chat/stream/route"},resolvedPagePath:"/Users/briankramer/Documents/GitHub/dealership-ai/apps/web/app/api/ai/chat/stream/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:x,staticGenerationBailout:y}=m,q="/api/ai/chat/stream/route";function v(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[1262,722,1894,9210],()=>r(94553));module.exports=s})();