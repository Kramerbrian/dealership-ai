"use strict";exports.id=7732,exports.ids=[7732],exports.modules={9757:(a,b,c)=>{c.d(b,{vR:()=>i});var d=c(88357);let e={admin:["read:dashboard","write:dashboard","read:batches","write:batches","read:queue","write:queue","read:admin","write:admin","read:costs","write:costs"],dealer:["read:dashboard","write:dashboard","read:batches","write:batches","read:queue","read:costs"],user:["read:dashboard","read:batches","read:queue"],viewer:["read:dashboard"]};class f{async createSession(a){let b=this.generateSessionId(),c=new Date;c.setHours(c.getHours()+24);let e={userId:a.id,user:a,expiresAt:c,createdAt:new Date};return this.sessions.set(b,e),d.vF.info("Session created",{userId:a.id,sessionId:b.substring(0,8)+"...",expiresAt:c}),b}async getSession(a){let b=this.sessions.get(a);return b?new Date>b.expiresAt?(this.sessions.delete(a),d.vF.info("Session expired",{userId:b.userId}),null):b:null}async deleteSession(a){let b=this.sessions.get(a);b&&(this.sessions.delete(a),d.vF.info("Session deleted",{userId:b.userId}))}async refreshSession(a){let b=this.sessions.get(a);b&&(b.expiresAt=new Date,b.expiresAt.setHours(b.expiresAt.getHours()+24))}generateSessionId(){return crypto.randomUUID()}async cleanupExpiredSessions(){let a=new Date,b=0;for(let[c,d]of this.sessions.entries())a>d.expiresAt&&(this.sessions.delete(c),b++);b>0&&d.vF.info("Cleaned up expired sessions",{count:b})}constructor(){this.sessions=new Map}}class g{constructor(){this.sessionManager=new f,setInterval(()=>{this.sessionManager.cleanupExpiredSessions()},36e5)}hasPermission(a,b){return a.permissions.includes(b)||e[a.role]?.includes(b)}hasAnyPermission(a,b){return b.some(b=>this.hasPermission(a,b))}hasAllPermissions(a,b){return b.every(b=>this.hasPermission(a,b))}canAccessDealer(a,b){return"admin"===a.role||a.dealerId===b}async authenticateRequest(a){try{let b=a.headers.get("authorization"),c=null;if(b&&b.startsWith("Bearer ")&&(c=b.substring(7)),c||(c=a.cookies.get("session")?.value||null),!c)return null;let d=await this.sessionManager.getSession(c);if(!d)return null;return await this.sessionManager.refreshSession(c),d.user}catch(a){return d.vF.error("Authentication error",a instanceof Error?a:Error(String(a))),null}}async createUserSession(a){return await this.sessionManager.createSession(a)}async logout(a){await this.sessionManager.deleteSession(a)}requireAuth(){return async a=>{let b=await this.authenticateRequest(a);if(!b)throw Error("Authentication required");return b}}requirePermission(a){return async b=>{let c=await this.authenticateRequest(b);if(!c)throw Error("Authentication required");if(!this.hasPermission(c,a))throw Error(`Permission required: ${a}`);return c}}requireDealer(a){return async b=>{let c=await this.authenticateRequest(b);if(!c)throw Error("Authentication required");if(!this.canAccessDealer(c,a))throw Error("Access to dealer not allowed");return c}}}class h{constructor(){this.users=new Map,this.users.set("admin@dealershipai.com",{id:"admin-1",email:"admin@dealershipai.com",role:"admin",permissions:[],metadata:{name:"Admin User",createdAt:new Date}}),this.users.set("dealer@toyota-naples.com",{id:"dealer-1",email:"dealer@toyota-naples.com",role:"dealer",dealerId:"toyota-naples",permissions:[],metadata:{name:"Toyota Naples",createdAt:new Date}}),this.users.set("user@example.com",{id:"user-1",email:"user@example.com",role:"user",dealerId:"toyota-naples",permissions:[],metadata:{name:"Demo User",createdAt:new Date}})}async findByEmail(a){return this.users.get(a)||null}async findById(a){for(let b of this.users.values())if(b.id===a)return b;return null}async createUser(a){let b={...a,id:`user-${Date.now()}`,permissions:e[a.role]||[],metadata:{createdAt:new Date}};return this.users.set(b.email,b),b}async updateUser(a,b){let c=await this.findById(a);if(!c)return null;let d={...c,...b};return this.users.set(c.email,d),d}}let i=new g;new h},82898:(a,b,c)=>{c.d(b,{G:()=>g});var d=c(88357),e=c(31023);class f{async loadPack(a){this.validatePromptPack(a),this.packs.set(a.id,a),a.prompts.forEach(a=>{this.templates.set(a.id,a)}),await e.P.set(e.P.key("prompt-pack",a.id),a,86400),d.vF.info("Prompt pack loaded",{packId:a.id,name:a.name,promptCount:a.prompts.length})}async loadPackFromFile(a){try{let b=await Promise.resolve().then(c.t.bind(c,79748,23)),d=JSON.parse(await b.readFile(a,"utf-8"));return await this.loadPack(d),d}catch(b){throw d.vF.error("Failed to load prompt pack from file",b instanceof Error?b:Error(String(b)),{filePath:a}),b}}getPack(a){return this.packs.get(a)||null}getTemplate(a){return this.templates.get(a)||null}listPacks(){return Array.from(this.packs.values())}listTemplates(a){if(a){let b=this.getPack(a);return b?b.prompts:[]}return Array.from(this.templates.values())}searchTemplates(a,b){let c=Array.from(this.templates.values()),d=a.toLowerCase();return c.filter(a=>{let c=a.name.toLowerCase().includes(d)||a.description.toLowerCase().includes(d)||a.metadata.tags.some(a=>a.toLowerCase().includes(d)),e=!b||a.category===b;return c&&e})}async expandPrompt(a,b){let c=this.getTemplate(a);if(!c)throw Error(`Template not found: ${a}`);this.validateVariables(c,b);let e=this.processTemplate(c.template,b),f={prompt:c.template,variables:b,expandedPrompt:e,metadata:{templateId:a,expandedAt:new Date,tokenCount:this.estimateTokenCount(e)}};return d.vF.debug("Prompt expanded",{templateId:a,variableCount:Object.keys(b).length,tokenCount:f.metadata.tokenCount}),f}async expandBatch(a){if(!this.getTemplate(a.templateId))throw Error(`Template not found: ${a.templateId}`);let b=[];for(let c of a.variations)try{let d=await this.expandPrompt(a.templateId,c);b.push(d)}catch(b){d.vF.error("Failed to expand prompt variation",b instanceof Error?b:Error(String(b)),{templateId:a.templateId,variables:c})}return d.vF.info("Batch prompt expansion completed",{templateId:a.templateId,requested:a.variations.length,successful:b.length}),b}validatePromptPack(a){if(!a.id||!a.name||!a.prompts)throw Error("Invalid prompt pack structure");a.prompts.forEach(b=>{if(!b.id||!b.name||!b.template)throw Error(`Invalid prompt template: ${b.id||"unknown"}`);let c=a.prompts.map(a=>a.id),d=c.filter((a,b)=>c.indexOf(a)!==b);if(d.length>0)throw Error(`Duplicate template IDs found: ${d.join(", ")}`)})}validateVariables(a,b){let c=a.variables.filter(a=>a.required&&!(a.name in b)).map(a=>a.name);if(c.length>0)throw Error(`Missing required variables: ${c.join(", ")}`);for(let c of a.variables){let a=b[c.name];void 0!==a&&this.validateVariable(c,a)}}validateVariable(a,b){switch(a.type){case"string":if("string"!=typeof b)throw Error(`Variable ${a.name} must be a string`);break;case"number":if("number"!=typeof b||isNaN(b))throw Error(`Variable ${a.name} must be a number`);break;case"boolean":if("boolean"!=typeof b)throw Error(`Variable ${a.name} must be a boolean`);break;case"array":if(!Array.isArray(b))throw Error(`Variable ${a.name} must be an array`);break;case"object":if("object"!=typeof b||null===b||Array.isArray(b))throw Error(`Variable ${a.name} must be an object`)}if(a.validation){let{pattern:c,min:d,max:e,options:f}=a.validation;if(c&&"string"==typeof b&&!new RegExp(c).test(b))throw Error(`Variable ${a.name} does not match required pattern`);if(void 0!==d&&"number"==typeof b&&b<d)throw Error(`Variable ${a.name} must be >= ${d}`);if(void 0!==e&&"number"==typeof b&&b>e)throw Error(`Variable ${a.name} must be <= ${e}`);if(f&&!f.includes(b))throw Error(`Variable ${a.name} must be one of: ${f.join(", ")}`)}}processTemplate(a,b){let c=a;return(c=(c=c.replace(/\{\{(\w+)\}\}/g,(a,c)=>{if(c in b){let a=b[c];return Array.isArray(a)?a.join(", "):String(a)}return a})).replace(/\{\{#if (\w+)\}\}(.*?)\{\{\/if\}\}/gs,(a,c,d)=>b[c]?d:"")).replace(/\{\{#each (\w+)\}\}(.*?)\{\{\/each\}\}/gs,(a,c,d)=>{let e=b[c];return Array.isArray(e)?e.map(a=>d.replace(/\{\{this\}\}/g,String(a))).join("\n"):""})}estimateTokenCount(a){return Math.ceil(a.length/4)}async getTemplateStats(a){let b=e.P.key("template-stats",a),c=await e.P.get(b);return{usageCount:c?.count||0,lastUsed:c?.lastUsed?new Date(c.lastUsed):null,averageTokens:c?.count?Math.round((c.totalTokens||0)/c.count):0}}async recordTemplateUsage(a,b){let c=e.P.key("template-stats",a),d=await e.P.get(c),f={count:(d?.count||0)+1,lastUsed:new Date().toISOString(),totalTokens:(d?.totalTokens||0)+b};await e.P.set(c,f,2592e3)}constructor(){this.packs=new Map,this.templates=new Map}}let g=new f},84237:(a,b,c)=>{c.d(b,{e:()=>h});var d=c(88357),e=c(31023);let f={"gpt-4o":{input:.005,output:.015},"gpt-4o-mini":{input:15e-5,output:6e-4},"gpt-3.5-turbo":{input:.0015,output:.002},"claude-3-5-sonnet":{input:.003,output:.015},"claude-3-opus":{input:.015,output:.075},"claude-3-haiku":{input:25e-5,output:.00125},"gemini-pro":{input:125e-6,output:375e-6},"gemini-flash":{input:75e-6,output:3e-4}};class g{constructor(a){this.costs=[],this.limits={daily:parseFloat(process.env.MAX_DAILY_SPEND||"100"),weekly:parseFloat(process.env.MAX_WEEKLY_SPEND||"500"),monthly:parseFloat(process.env.MAX_MONTHLY_SPEND||"1000"),perUser:parseFloat(process.env.MAX_PER_USER_SPEND||"50"),perDealer:parseFloat(process.env.MAX_PER_DEALER_SPEND||"200"),...a}}calculateCost(a,b,c,e){let g=f[b];return g?c/1e3*g.input+e/1e3*g.output:(d.vF.warn("Unknown model pricing",{provider:a,model:b}),0)}async recordCost(a){let b=a.cost||this.calculateCost(a.provider,a.model,a.inputTokens,a.outputTokens),c={...a,cost:b,timestamp:new Date};this.costs.push(c);let f=e.P.key("costs",new Date().toISOString().split("T")[0]),g=await e.P.get(f)||[];g.push(c),await e.P.set(f,g,86400),d.vF.info("Cost recorded",{provider:a.provider,model:a.model,cost:b,inputTokens:a.inputTokens,outputTokens:a.outputTokens}),await this.checkLimits(c)}async checkLimits(a){let b=new Date().toISOString().split("T")[0],c=await this.getCostSummary("daily",b);if(c.totalCost>this.limits.daily&&d.vF.warn("Daily cost limit exceeded",{current:c.totalCost,limit:this.limits.daily}),a.userId&&this.limits.perUser){let c=await this.getUserCosts(a.userId,"daily",b);c>this.limits.perUser&&d.vF.warn("User daily cost limit exceeded",{userId:a.userId,current:c,limit:this.limits.perUser})}if(a.dealerId&&this.limits.perDealer){let c=await this.getDealerCosts(a.dealerId,"daily",b);c>this.limits.perDealer&&d.vF.warn("Dealer daily cost limit exceeded",{dealerId:a.dealerId,current:c,limit:this.limits.perDealer})}}async getCostSummary(a,b){let c=e.P.key("cost-summary",a,b||new Date().toISOString().split("T")[0]),d=await e.P.get(c);if(d)return d;let f=await this.getCostsForPeriod(a,b),g={totalCost:f.reduce((a,b)=>a+b.cost,0),totalTokens:f.reduce((a,b)=>a+b.inputTokens+b.outputTokens,0),operationCounts:{},providerBreakdown:{},period:`${a}-${b||new Date().toISOString().split("T")[0]}`};for(let a of f)g.operationCounts[a.operation]=(g.operationCounts[a.operation]||0)+1;for(let a of f)g.providerBreakdown[a.provider]||(g.providerBreakdown[a.provider]={cost:0,tokens:0}),g.providerBreakdown[a.provider].cost+=a.cost,g.providerBreakdown[a.provider].tokens+=a.inputTokens+a.outputTokens;return await e.P.set(c,g,3600),g}async getUserCosts(a,b,c){return(await this.getCostsForPeriod(b,c)).filter(b=>b.userId===a).reduce((a,b)=>a+b.cost,0)}async getDealerCosts(a,b,c){return(await this.getCostsForPeriod(b,c)).filter(b=>b.dealerId===a).reduce((a,b)=>a+b.cost,0)}async getCostsForPeriod(a,b){let c=b?new Date(b):new Date,d=[];if("daily"===a){let a=e.P.key("costs",c.toISOString().split("T")[0]),b=await e.P.get(a)||[];d.push(...b)}else if("weekly"===a)for(let a=0;a<7;a++){let b=new Date(c);b.setDate(b.getDate()-a);let f=e.P.key("costs",b.toISOString().split("T")[0]),g=await e.P.get(f)||[];d.push(...g)}else if("monthly"===a)for(let a=0;a<30;a++){let b=new Date(c);b.setDate(b.getDate()-a);let f=e.P.key("costs",b.toISOString().split("T")[0]),g=await e.P.get(f)||[];d.push(...g)}return d}async canProceed(a,b,c,d,e,f){let g=this.calculateCost(a,b,c,d),h=new Date().toISOString().split("T")[0],i=await this.getCostSummary("daily",h);if(i.totalCost+g>this.limits.daily)return{allowed:!1,reason:"Daily cost limit would be exceeded",currentCost:i.totalCost,limit:this.limits.daily};if(e&&this.limits.perUser){let a=await this.getUserCosts(e,"daily",h);if(a+g>this.limits.perUser)return{allowed:!1,reason:"User daily cost limit would be exceeded",currentCost:a,limit:this.limits.perUser}}if(f&&this.limits.perDealer){let a=await this.getDealerCosts(f,"daily",h);if(a+g>this.limits.perDealer)return{allowed:!1,reason:"Dealer daily cost limit would be exceeded",currentCost:a,limit:this.limits.perDealer}}return{allowed:!0}}async getTopSpenders(a,b=10){let c=await this.getCostsForPeriod(a),d=new Map;for(let a of c){if(a.userId){let b=`user:${a.userId}`,c=d.get(b)||{cost:0,operations:0,type:"user"};d.set(b,{cost:c.cost+a.cost,operations:c.operations+1,type:"user"})}if(a.dealerId){let b=`dealer:${a.dealerId}`,c=d.get(b)||{cost:0,operations:0,type:"dealer"};d.set(b,{cost:c.cost+a.cost,operations:c.operations+1,type:"dealer"})}}return Array.from(d.entries()).map(([a,b])=>({id:a.split(":")[1],...b})).sort((a,b)=>b.cost-a.cost).slice(0,b)}}let h=new g}};